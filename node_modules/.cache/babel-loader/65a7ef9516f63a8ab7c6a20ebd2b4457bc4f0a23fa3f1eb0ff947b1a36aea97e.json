{"ast":null,"code":"var _jsxFileName = \"/Users/anita/Documents/IE 3RD/Statistical/grouppojectstats/src/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatPage.css';\nimport userLogo from './guy.jpg';\nimport botLogo from './bot.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const sendMessage = async () => {\n    const userMessage = {\n      text: inputText,\n      isUser: true\n    };\n    setMessages([...messages, userMessage]);\n    const response = await fetch('http://127.0.0.1:5000/ask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_input: inputText\n      })\n    });\n    const data = await response.json();\n    const botMessage = {\n      text: data.answer,\n      isUser: false\n    };\n    setMessages(messages => [...messages, botMessage]);\n    setInputText('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: \"Find the restaurant that best matches your requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.isUser ? 'user' : 'bot'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.isUser ? userLogo : botLogo,\n            alt: message.isUser ? 'User' : 'Bot',\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your preferences... (cuisine style, city/ location...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"XjzYOZb5NzW+E6XGKBVKwRlePKo=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","userLogo","botLogo","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","inputText","setInputText","sendMessage","userMessage","text","isUser","response","fetch","method","headers","body","JSON","stringify","user_input","data","json","botMessage","answer","handleKeyPress","e","key","style","display","height","children","flex","overflowY","padding","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","index","src","alt","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/anita/Documents/IE 3RD/Statistical/grouppojectstats/src/ChatPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatPage.css';\nimport userLogo from './guy.jpg';\nimport botLogo from './bot.jpg';\n\nconst ChatPage = () => {\n    const [messages, setMessages] = useState([]);\n    const [inputText, setInputText] = useState('');\n\n    const sendMessage = async () => {\n        const userMessage = { text: inputText, isUser: true };\n        setMessages([...messages, userMessage]);\n\n        const response = await fetch('http://127.0.0.1:5000/ask', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user_input: inputText })\n        });\n\n        const data = await response.json();\n        const botMessage = { text: data.answer, isUser: false };\n        setMessages(messages => [...messages, botMessage]);\n\n        setInputText('');\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            sendMessage();\n        }\n    };\n\n    return (\n        <div style={{ display: 'flex', height: '100vh' }}>\n            {/* Chat section */}\n            <div style={{ flex: 1, overflowY: 'auto', padding: '20px' }}>\n                <h2 style={{ marginTop: '30px' }}>Find the restaurant that best matches your requests</h2>\n                <div className=\"messages-container\">\n                    {messages.map((message, index) => (\n                        <div\n                            key={index}\n                            className={`message ${message.isUser ? 'user' : 'bot'}`}\n                        >\n                            <img\n                                src={message.isUser ? userLogo : botLogo}\n                                alt={message.isUser ? 'User' : 'Bot'}\n                                className=\"avatar\"\n                            />\n                            <div className=\"message-text\">{message.text}</div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        value={inputText}\n                        onChange={(e) => setInputText(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        placeholder=\"Type your preferences... (cuisine style, city/ location...)\"\n                    />\n                    <button onClick={sendMessage}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,WAAW,GAAG;MAAEC,IAAI,EAAEJ,SAAS;MAAEK,MAAM,EAAE;IAAK,CAAC;IACrDN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,WAAW,CAAC,CAAC;IAEvC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,UAAU,EAAEb;MAAU,CAAC;IAClD,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAG;MAAEZ,IAAI,EAAEU,IAAI,CAACG,MAAM;MAAEZ,MAAM,EAAE;IAAM,CAAC;IACvDN,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEkB,UAAU,CAAC,CAAC;IAElDf,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMiB,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBlB,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAK0B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAE7C7B,OAAA;MAAK0B,KAAK,EAAE;QAAEI,IAAI,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAH,QAAA,gBACxD7B,OAAA;QAAI0B,KAAK,EAAE;UAAEO,SAAS,EAAE;QAAO,CAAE;QAAAJ,QAAA,EAAC;MAAmD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1FrC,OAAA;QAAKsC,SAAS,EAAC,oBAAoB;QAAAT,QAAA,EAC9B1B,QAAQ,CAACoC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBzC,OAAA;UAEIsC,SAAS,EAAG,WAAUE,OAAO,CAAC9B,MAAM,GAAG,MAAM,GAAG,KAAM,EAAE;UAAAmB,QAAA,gBAExD7B,OAAA;YACI0C,GAAG,EAAEF,OAAO,CAAC9B,MAAM,GAAGb,QAAQ,GAAGC,OAAQ;YACzC6C,GAAG,EAAEH,OAAO,CAAC9B,MAAM,GAAG,MAAM,GAAG,KAAM;YACrC4B,SAAS,EAAC;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACFrC,OAAA;YAAKsC,SAAS,EAAC,cAAc;YAAAT,QAAA,EAAEW,OAAO,CAAC/B;UAAI;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAR7CI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAST,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNrC,OAAA;QAAKsC,SAAS,EAAC,iBAAiB;QAAAT,QAAA,gBAC5B7B,OAAA;UACI4C,IAAI,EAAC,MAAM;UACXC,KAAK,EAAExC,SAAU;UACjByC,QAAQ,EAAGtB,CAAC,IAAKlB,YAAY,CAACkB,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC9CG,UAAU,EAAEzB,cAAe;UAC3B0B,WAAW,EAAC;QAA6D;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,eACFrC,OAAA;UAAQkD,OAAO,EAAE3C,WAAY;UAAAsB,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACnC,EAAA,CA9DID,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AAgEd,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}